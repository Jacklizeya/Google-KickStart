const fs = require("fs")


//    in real google, change smaple.txt to 0 !
const raw = fs.readFileSync("sample.txt", "utf8").trim().split("\n")


for (i=2; i < raw.length; i= i+2) {
    array = raw[i].split(" ").map(element => parseInt(element))
//******************Donot change above */
    
    let maxContinue = 2
    
    if (array.length > 2) {
        maxContinue = 3
    
        for (j = 0; j < array.length; j++) {        

 // the first one and last one is easy to change, numbers in the middle is hard to decide.           

            if (j < 2 ) { 
                // follow the right trend at the beginning
                let newArray = array.map(element => element)
                newArray.splice(j, 1, 2 * array[j+1] - array[j+2]); 
                caseContinuity = checkContinue(newArray)}
            else if (j >= 2 && j < array.length - 2) { 
                // follow left trend
                let leftGap = array[j-2] - array[j-1] ; let s = j-2;

                while (array[s-1] - array[s] === leftGap && s >= 0) {s--}; leftLength = (j-1)-s + 1; 
                let rightGap = array[j+1] - array[j+2] ; let m = j+1;
                while (array[m] - array[m+1] === rightGap && m <= array.length -2 ) {m ++}; rightLength = m - (j+1) + 1 
                
                
                if (leftGap === rightGap && 2 * array[j-1] - array[j-2] === 2 * array[j+1] - array[j+2]) {caseContinuity = leftLength + rightLength + 1} 
                else {
                    
                    caseContinuity = Math.max(leftLength, rightLength) + 1
                    
                    if (array[j-1] - array[j+1] === 2 * leftGap || array[j-1] -  array[j+1] === 2 * rightGap ) {caseContinuity += 1; }

                }
               
            } 
            else { 
                // follow the left trend near the end
                let newArray = array.map(element => element)
                newArray.splice(j, 1, 2 * array[j-1] - array[j-2]); 
                caseContinuity = checkContinue(newArray)}

            
            if (caseContinuity > maxContinue) {maxContinue = caseContinuity}
    }
    }
//*******************Donot change this line *******/       
    console.log(`Case #${i/2}: ${maxContinue}`)  
}













function checkContinue(newArray)
{
    
    let currentgap = newArray[1] - newArray[0] 
    let currentContinuity = 2
    let maxcontinuity = 3
    for (k = 2; k < newArray.length; k++) {
        if (newArray[k] - newArray[k-1] === currentgap) {currentContinuity ++} 
        else { currentgap = newArray[k] - newArray[k-1] ; currentContinuity = 1}

        if (currentContinuity > maxcontinuity) {maxcontinuity = currentContinuity}                 
    }
    return maxcontinuity
}


// I am trying to change every element, then check each case's longest continuity, N2 big O
